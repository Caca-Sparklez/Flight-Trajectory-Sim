clear
clc
close all

%Equations of motion calculations for the Chimera Dynamic Stability
%Software
%Program Manager: James "Wes" Wingo
%Team Lead: Christian Guida
%Authors: Corbin Saunders, Jackson Presecan

%This program computes the pitch, pitching rates, and roll angle of the
%vehicle over a specified timespan at a constant speed. This is used for
%dynamic stability calculations and not for full flight sims

%% Input Variables:
% I_L - Lenghwise Moment of Inertia
% rho_atm - Atmospheric Density
% V - Vector form of Velocity
% D - Rocket body diameter
% Cm_alpha_dot - Time derivative of the lateral moment coefficient
% Cm_alpha_dot_exh - Time deritvative of the Coefficient of lateral moment generated by the exhaust
% S_ref - Reference area
% Cm_alpha - Lateral moment coefficient
% I_R - Axial moment of inertia
% Clp - Axial coefficient of lift
% Cm_delta_e - Moment of inertia of the control surface 
% delta_e - angle of control surface deflection (pitch)
% delta_a - angle of control surface deflection (roll)
% C_l_delta_a - Coefficient of lift of control surface (roll)
% P0 - Initial roll angle
% Alpha0 - Initial angle of attack
% Alpha_dot0 - Initial angular velocity

%% Output Variables:
% Alpha - Angle of attack
% Aplha_dot - Angular velocity
% Alpha_ddot - Angular acceleration
% P - Roll angle 
% Pdot - Roll rate
% Pddot - Roll acceleration

%% Calculations

% State Variable: Alpha0, Alpha_dot0, P0
s0=[0 ; 0 ; 0];

% Timespan
Time_span = 60; %total time of integration, seconds
tspan = (0:0.1:Time_span);

%this is like really janky I'm sorry, this has all the variables needed for
%integration

% function call ODE45
options = odeset('RelTol',1e-8, 'AbsTol', 1e-8);
[Time, State] = ode45(@(t,s) EOM(s,t,I_R,I_L,rho_atm,V,S_ref,D,Cm_alpha_dot,...
                                 Cm_alpha_dot_exh,Alpha_dot,Cm_alpha,Alpha,...
                                 Clp,p,C_l_delta_a,delta_a),...
                                 tspan, s0, options);

%EOMS integration
function ds = EOM(s,t,I_R,I_L,rho_atm,V,S_ref,D,Cm_alpha_dot,...
                  Cm_alpha_dot_exh,Alpha_dot,Cm_alpha,Alpha,Clp,P,...
                  C_l_delta_a,delta_a)

Alpha=s(1);
Alpha_dot=s(2);
P=s(3);
ds(1,1)=s(2);

%Integration of pitch rate
Alpha_ddot = 1/I_L*(-0.5*rho_atm*V*S_ref*D^2*Cm_alpha_dot*Alpha_dot - ...
    D^2*Cm_alpha_dot_exh*Alpha_dot - ...
    1/2*rho_atm*V^2*S_ref*Cm_alpha*Alpha);

ds(2,1) = Alpha_ddot;

%Integration or roll rate
P_dot = 1/I_R*(-1/2*rho_atm*V*S_ref*D^2*Clp*P - ...
    1/2*rho_atm*V^2*S_ref*D*C_l_delta_a*delta_a);

ds(3,1) = P_dot;
end

